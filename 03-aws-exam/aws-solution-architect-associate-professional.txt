https://tutorialsdojo.com/

Importan Exam topics:
---------------------
Niels Course -- Associate Level Question numbers are from "2 Attempt"  Professional level Questions are from "1 Attempt"
Jon Donso Course -- Professional level Questions are from "3 Attempt" of all 4 practise teste
########################################################
Topics need to revise:   Cloud-HSM, Cognito, 

Question not understand:
------------------------
P: 2.11, 3.26, 4.1, 4.30(in explanation third option) 
DJ: 2.22, 2.27, 2.70

########################################################

P-AWS-CDK (Cloud-Development-Kit): 3.21

P-CI/CD: 3.25, 4.6, 4.27, 6.4, 6.7, 6.10

P-Security: 3.11, 3.13

A-IAM: 1.38, 2.4, 2.5, 2.52, 2.53, 3.25, 3.26, 3.60, 5.33, 5.49
P-IAM: 2.9, 2.20, 4.10, 6.17, 6.26
DJ-IAM: 2.25, 3.6, 3.11(External-ID), 3.13, 3.28, 

DJ-Ec2-Instance-Profile(IAM-Role): 4.1
DJ-Ec2-Instance-Role: 4.22

DJ-IAM-Resoure-Based-Policy: 1.1, 2.10

DJ-IAM-Service-Linked-Role: 1.64

DJ-IAM-for-CROSS-Account-Access: 4.33

DJ-Service-Control-Policies (SCP): 1.30, 1.51, 3.42, 3.62(Tag Editor, & A SCP can also define a "Deny-rule")

A-IAM-Organizations: 2.60, 3.64, 4.49
P-IAM-Organizations: 1.23,

A-Organization-Unit: 1.23, 
P-Organization-Unit: 1.2, 1.7, 1.27, 4.23, 6.9
DJ-Organization-Unit: 1.21, 1.30, 2.55, 2.67

A-Organization: 4.15, 5.45
P-Organization: 6.28
DJ-Organization: 2.47, 3.30, 3.68

P-AWS-Budgets: 1.2, 2.27, 4.14

P-Cost-Allocation-Tags: 2.25,
DJ-Cost-Allocation-Tags: 3.62 (Tag Editor), 3.67, 4.15

P-AWS-QuickSight-Dashboard: 2.16

A-Lmabda: 1.7, 2.24
P-Lambda: 1.11, 1.15, 3.8, 4.21(imp), 5.7, 5.9, 6.1
DJ-Lambda: 2.53

P-Lambda@Edge: 3.20
DJ-Lambda@Edge: 2.63(User-Agent HTTP Header), 3.46

P-Step-Functions: 6.1
DJ-Step-Functions: 2.21

A-Amazon-FSx-Luster: 2.13, 2,14, 2.45, 3.31, 3.63
DJ-FSx-Lustre: 3.49

A-Amazon-FSx-Windows: 2.47, 2.57, 3.12, 3.24, 5.7, 5.19, 5.26
DJ-Amazon-FSx-Windows: 3.50

(For Windows Active Directory)
A-Amazon-FSx: 1.49, 1.61, 4.32, 5.28

A-AWS-Directory-Service-For-Microsoft-Active-Directory: 5.47
P-AWS-Directory-Service-For-Microsoft-Active-Directory:
DJ-AWS-Directory-Service-For-Microsoft-Active-Directory: 2.61

A-AWS IAM Identity Center: 5.47

A-SnowBall: 2.12, 2.16, 3.50 
P-SnowBall: 2.30
DJ-SnowBall: 2.2, 4.6

(Snowball-Edge-Device-can-store-upto-80TB)
A-Snowball-Edge-Device: 1.12, 4.27, 4.59
DJ-Snowball-Edge-Device: 1.4, 2.39

A-Snowball-Devices: 4.24

A-AWS-Snowmobile (truck): 
P-AWS-Snowmobile (truck): 

------------------------------------------------------------
https://www.youtube.com/watch?v=JIW_pV3zau8

CloudFront Signed URLS(PrivateLink)  <-- it is used when we want to give permission only to one file
CloudFront Signed cookies            <-- it is used when we want to give permissions to many files.
--------------------------------------------------------

A-CloudFront-PrivateLink: 1.13, 2.29, 3.39

DJ-CloudFront-PrivateLink: 2.4

A-CloudFront: 1.16, 1.19, 1.33, 1.47, 1.60, 2.2, 2.25, 2.38, 2.39, 2.56, 3.40, 3.58, 3.61, 4.20, 4.52, 5.41, 5.42
P-CloudFront: 1.20, 1.25, 2.12, 3.20, 3.27, 6.15, 6.16
DJ-CloudFront: 1.18, 1.23, 1.27, 2.12, 2.18, 2.33(https://www.youtube.com/watch?v=9TlWF0-Ah8Q)
               2.38, 2.69(steady-state usage), 3.10, 3.15, 3.17, 3.20, 3.41, 3.72
               4.4, 4.35

A-CloudFront-Edge-Functions: 4.50

DJ-Single-CloudFront-web-distribution-Multiple-Origins: 4.35

A-CloudTrail: 2.48, 2.55, 3.33, 4.49, 5.32, 5.39
DJ-CloudTrail: 1.29, 1.32, 1.73, 2.7, 3.56, 4.5

DJ-Organization-Trails: 3.56


A-CloudWatch: 3.3, 3.4, 4.4, 5.55
DJ-CloudWatch: 1.33

P-CloudWatch-Logs: 5.23

A-Unified-CloudWatch-Agent: 4.45 
DJ-Unified-CloudWatch-Agent: 1.58

A-DataSync: 1.20,1.39, 2.49, 3.48, 5.19
P-DataSync: 1.15

A-Direct-Connect: 1.39
DJ-Direct-Connect: 1.52, 1.53

A-EFA: 1.9
P-EFA:

A-Ec2: 1.10, 1.45, 1.63, 2.51, 3.16, 6.5
P-Ec2: 5.15

A-Ec2-Capacity: 5.36

A-Ec2-price: 1.15, 1.30, 1.43, 1.53, 4.56, 6.1
P-Ec2-price: 2.3, 4.14
DJ-Ec2-price: 1.41, 1.57, 1.63, 3.2

A-Ec2-AutoScaling: 2.32, 2.62, 3.2, 3.15, 3.32, 3.54, 6.4
P-Ec2-AutoScaling: 4.24, 
DJ-Ec2-AutoScaling: 3.73(steady-state-load)
Note: "Steady-state-load" means that some traffic is stable, e.g that an EC2 instance get a regularly same amount of traffic, 
       it means "steady-state-load", in this case we can use "Reserver-Instances" as we know that this amount of load is comming regularly
       so "On-Demand" or "Spot-Instance" are not suitable in this use-case.

A-Ec2-Instance-Store: 3.10

A-Ec2-Cluster-Placement-Group: 2.26, 3.49, 5.40(all-info)
P-Cluster-Placement-Group: 2.4, 5.2
DJ-Ec2-Cluster-Placement-Group: 3.60, 4.26

DJ-Ec2Rescue: 4.27

A-ECS: 1.22, 2.64, 3.29
P-ECS: 1.10, 5.19, 5.29
JD-ECS: 1.2, 1.9, 1.63

A-EBS: 5.9, 5.54, 5.64
P-EBS: 6.13
DJ-EBS: 3.25

A-EBS-Encryption: 5.3, 5.38

A-EBS-Price: 1.44, 3.28
P-EBS-Price: 2.3

P-AWS-Data-Lifecycle-Manager (AWS-DLM): 6.13

A-EKS: 1.65

A-EFS: 1.2, 1.18, 1.36, 2.11, 2.23, 2.50, 3.7, 4.44, 5.8, 5.63

A-NLB: 1.4
P-NLB: 3.19(imp)
DJ-NLB: 2.22 (https://www.youtube.com/watch?v=0bHXWIM4_0o), 4.30

A-ALB: 1.28,
P-ALB: 6.14, 6.21
DJ-ALB: 1.46, 2.16, 2.51, 3.47, 3.72, 4.28

A-API-Gateway: 2.58, 3.21, 3.43, 5.6, 5.30, 5.65(caching-response)
P-API-Gateway: 1.1, 1.13, 4.7, 4.13, 5.11, 5.24
DJ-API-Gateway: 2.11, 3.55

DJ-API-Gateway-Lambda-Proxy-Integration: 2.9

A-Internet-Gateway: 5.50

A-SNS: 4.43

A-AWS-Network-Firewall: 2.65

Disaster-Recovery  -  PITR - (Point-in-time-recovery)
DJ-RDS (RTO-RPO-PITR): 2.68, 4.11
DJ-Aurora-Read-Replica-RTO-RPO: 3.70,


A-RDS-DB: 1.5, 1.29, 1.34, 1.35, 1.37, 1.50, 2.7, 2.9, 2.27, 2.37, 2.42, 3.35, 4.18, 4.51
P-RDS-DB: 4.12
DJ-RDS-DB: 1.47, 2.29, 2.71, 3.14, 3.19

A-RDS-Proxy: 2.40
DJ-RDS-Proxy: 4.21

A-RDS-MySQL-DB: 5.35
P-RDS-MySQL-DB: 1.18

DJ-RDS-Oracle: 2.46
DJ-Oracle: 2.31

A-RDS-MySQL-DB-Instance: 3.55, 4.10
P-RDS-MySQL-DB-Instance: 1.9, 6.12
DJ-RDS-MySQL-DB-Instance: 2.15, 4.32

A-AWS-RDS-Microsoft-SQL: 4.64

A-Aurora-DB: 4.13
DJ-Aurora-DB: 1.57

A-Aurora-Global-DB: 1.21, 3.57, 4.14
P-Aurora-Global-DB: 1.16
DJ-Aurora-Global-DB: 3.4

A-Aurora-MySQL: 2.44, 3.14
P-Aurora-MySQL: 1.19, 2.7, 4.2

A-Aurora-MySQL-Cluster: 3.46
DJ-Aurora-MySQL-Cluster: 4.21 

A-Aurora-Serverless: 3.41

DJ-Aurora-Autoscaling: 3.28



A-DynamoDB: 2.61, 3.8, 4.19, 5.25, 5,57           (MongoDB) (RCU  read-capacity-unit) (WCU write-capacity-unit)
P-DynamoDB: 2.19, 3.17, 3.18, 3.22, 3.24, 5.27, 5.28, 6.20
DJ-DynamoDB: 1.12, 1.19, 1.61, 2.14, 3.9, 4.19, 4.34

A-DynamoDB-Streams: 4.65
P-DynamoDB-Streams: 3.23, 4.3
DJ-SynamoDB-Streams: 3.26

A-DynamoDB-Accelerator: 5.27, 5.42
P-DynamoDB-Accelerator: 1.3

A-DocumentDB (it store JSON data): 4.12    

A-RedShift: 2.46, 5.5

A-S3: 1.6, 1.25, 1.32, 1.59, 1.64, 2.10, 3.22, 3.42, 3.53, 4.5, 4.38, 5.18, 5.51, 5.58,
P-S3: 2.9, 3.9, 4.25, 4.26, 5.3(imp), 5.6, 5.6, 5.14, 5.16, 5.20, 5.26, 6.20, 6.27, 6.30
DJ-S3: 1.28, 1.38, 1.42, 1.54, 2.4, 2.5, 2.20, 2.37, 2.48, 2.52, 2.74, 3.6, 3.18, 3.29, 3.36
       3.51, 3.54, 4.17

DJ-S3-Cross-Account: 4.10

A-S3-Encryption: 2.63, 3.59, 4.41, 5.61
P-S3-Encryption: 4.11, 5.16,
DJ-S3-Encryption: 1.65, 2.75, 3.5, 3.35, 3.74

A-S3-policy: 5.43, 5.45
P-S3-policy: 2.23

A-S3-Lifecycle-policy: 2.36, 3.5, 3.51, 4.3, 4.54, 4.57, 3.60, 6.6
P-S3-Lifecycle-policy: 1.8

A-S3-Access-Points: 4.46

A-S3-Data-Lake: 3.47

P-S3-Transfer-Acceleration (it is for uploading data to S3): 2.17, 6.29
DJ-S3-Transfer-Acceleration: 2.58

A-Gloal Accelerator: 1.1, 3.23, 3.52, 4.48, 5.53
DJ-Global Accelerator: 1.26

A-KMS: 3.59, 3.62, 5.61
P-KMS: 4.28

A-ECS: 1.62, 2.64
P-ECS: 6.22
DJ-ECS: 1.17

DJ-Fargate: 1.7

A-ECS-Fargate: 2.31, 2.41
DJ-ECS-Fargate: 3.9

A-FahrGate-EKS: 4.12
P-FahrGate-EKS: 2.18

A-SQS: 5.15, 5.31, 5.52,
P-SQS: 1.4, 1.14, 1.28, 2.1, 3.2, 6.6
DJ-SQS: 1.45, 2.32, 2.43, 3.1, 3.31, 3.34, 3.38, 4.29

A-SQS-Standard-Queue: 1.11, 1.14, 1.17(RBP), 1.42, 1.51, 2.19, 2.34, 3.30, 3.37, 3.45, 4.63, 5.2

A-SQS-FIFO: 3.1, 4.40

A-MQ: 1.40, 4.16

A-Stograge-Gateway: 1.24, 1.31, 1.54, 2.6, 2.22, 3.17
DJ-Storage-Gateway: 2.73, 3.22, 3.39, 3.53

DJ-File-Gateway: 1.36



A-AWS Storage Gateway File gateway: 4.2, 5.60 


VPC Endpoints are of three types: Interface-Endpoint , Gateway-Endpoint , GatewayLoadBalancer-Endpoint
---------------------------------------------------
https://www.youtube.com/watch?v=jo3X_aay4Vs     <-- main points explained here for "VPC-Endpoint"
https://www.youtube.com/watch?v=PuFGvU3jbtk     <-- Endable DNS Hostname

A-VPC-Endpoint: 4.35, 5.48
P-VPC-Endpoint: 4.22
DJ-VPC-Endpoint-Policy: 3.51 

A- VPC Interface Endpoint: 1.27
P- VPC Interface Endpoint: 4.22, 5.1(i https://www.youtube.com/watch?v=jo3X_aay4Vs) 

A-Virtual-Interface: 5.48(given all info about the all types of Virtual-Interfaces )

(VPC Gateway Endpoint is only for  S3 and DynamoDB)
A- VPC-Gateway-Endpoint: 1.27, 1.57, 2.30, 3.18, 3.36, 4.8

A-VPC: 1.41, 2.3, 3.39, 3.44, 4.15
DJ-VPC: 1.16, 2.56

DJ-VGW-Virtual-private-Gateway: 3.7

DJ-VPC-Flow-Logs: 1.16

DJ-IP-Address-Block: 1.75

A-VPN: 3.19
DJ-VPN: 3.63

P-Subnet: 5.25
DJ-Subnet: 2.22

DJ-Network-Interface: 2.50

A-Virtual-Private-Gateway: 3.19, 5.12
---------------------------------------------------
A-Kinesis-Data-Stream & Firehose: 1.46, 2.8, 2.54, 4.28
P-Kinesis-Data-Stream & Firehose: 1.11, 3.7
DJ-Kinesis: 1.74, 2.44, 3.23

A-Kinesis-Data-Firehose: 5.24
DJ-Kinesis-Data-Firehose: 4.8, 4.16

A-Route-53: 1.55, 1.56, 3.6, 3.58
P-Route-53: 1.30, 3.10, 6.5, 6.8
DJ-Route-53: 1.8, 1.13, 1.14, 1.25, 1.46, 1.59, 2.8(Alias-record)

DNS-Resolver:
DJ-Route-53 (outbound-resolver): 2.59, 3.21

DJ-ACM-Amazon-Certificate-Manager: 1.67, 

A-Route-Table: 5.50(see-pic)

Ã‚-Presigned-URL: 2.10

https://www.stormit.cloud/blog/aws-direct-connect/
https://docs.aws.amazon.com/de_de/whitepapers/latest/aws-vpc-connectivity-options/aws-direct-connect.html
(Transit gateway if all VPCs are in same region, DX gateway if VPCs are in different regions)
A-Direct-Connect (DX): 2.17
P-Direct-Connect (DX): 1.5, 3.18, 6.2, 6.11, 6.23
DJ-Direct-Connect (DX): 1.24, 3.71

A-Direct-Connect-Link: 2.15

A-Transit-Gateway: 2.18, 5.22
P-Transit-Gateway: 2.10
DJ-Transit-Gateway: 2.40

A-AMI: 2.20

A-Network-ACLs (NACL): 3.34
DJ-Network-ACLs (NACL): 4.20, 4.30

A-Security-Group: 2.1, 3.34, 4.33, 4.58, 5.21
P-Security-Group: 2.29
DJ-Security-Group: 2.54, 3.45

A-Glue: 2.21, 5.16
P-Glue: 1.12, 5.13, 5.22



A-ElastiCache: 5.34(all-explained)
DJ-Elasticache: 3.24

A-ElastiCache-Redis: 2.35, 3.13, 4.22, 4.23, 5.23


A-QuickSight-Dashboard: 2.55

A-Bastion-Host: 2.9

A-CloudFormation: 3.20
P-CloudFormation: 1.29, 5.4
DJ-CloudFormation: 1.35, 2.1, 2.15, 2.26, 2.35, 2.64, 2.66, 3.27, 4.1

A-GuardDuty: 3.27, 4.37

A-Amazon Quantum Ledger Database (QLDB): 3.38

A-NatGateway: 3.47, 5.14, 5.50
P-NatGateway: 6.19
DJ-NatGateway: 1.10, 2.24, 3.16

DJ-Proxy-Server: 2.45

DJ-Forward-Proxy-Server: 2.49


A-Lake Formation: 3.65


A-Redshift-Spectrum: 4.6

P-Redshift: 2.27
DJ-Redshift: 3.59

A-SageMaker: 4.7
DJ-SageMaker: 2.35

A-Data-Exchange: 4.7

A-Disaster-Recovery: 4.9, 5.1(i-Diagram), 5.62
P-Disaster-Recovery: 3.12, 3.16, 6.25
DJ-Disaster-Recovery: 1.60, 1.66, 2.13, 2.27, 2.65, 3.70

A-AWS-Compute-Optimizer: 4.17

A-AWS-Config-Rule: 4.21, 5.32, 5.39, 5.44
DJ-AWS-Config: 1.1, 1.29, 1.44, 3.43
DJ-AWS-Config-Manager-Rule: 4.9

P-AWS-Config-Auto-Remediation: 5.20,

A-AWS-AppSync-(GraphQL-API): 4.25
P-AWS-AppSync-(GraphQL-API): 4.9
DJ-AWS-AppSync-(GraphQL-API): 4.25

A-AWS-Private-5G: 4.26

A-RAID-0: 4.30

A-RAID-1: 4.29
DJ-3.60(just in option he adds RAID)

A-AWS-Batch-Job: 4.34(i-HPC), 6.2
DJ-AWS-Batch-Job: 1.38

A-AWS-License-Manager: 4.36

P-Systems-Manager: 5.30

DJ-Systems-Manager-Session-Manager: 1.3

A-Systems-Manager-Run-Command: 5.13, 6.3

A-Systems-Manager-Patch-Manager: 5.17
P-Systems-Manager-Patch-Manager: 2.14
DJ-Systems-Manager-Patch-Manager: 1.39, 1.44, 1.55, 2.30, 3.32

DJ-Systems-Manager-Maintence-Windows: 2.30

A-AWS-Systems-Manager-Parameter-Store: 4.39
DJ-AWS-Systems-Manager-Parametr-Store: 1.43

P-AWS-Systems-Manager-Agent: 2.21

A-AWS-Systems-Manager-Automation-Documents: 5.44
DJ-AWS-Systems-Manager-Automation: 3.58

A-AWS-Comprehend: 4.47

A-AWS-Direct-Connect: 4.53

A-AWS-Athena: 4.55, 4.61, 5.16

A-AWS-Control-Tower: 4.62

A-AWS-Keyspaces: 4.64

A-WAF: 1.52, 2.33
P-WAF: 4.15
DJ-WAF: 1.31, 3.3


(AWS Shield Standard is included automatically and transparently to your Elastic Load Balancing load balancers, Amazon CloudFront distributions, and Amazon Route 53 resources at no additional cost.)
DJ-AWS-Shield: 1.50, 2.17, 3.57


A-AWS-Firewall-Manager: 5.4

A-Gateway-Load-Balancer: 5.10

A-EventBridge: 5.11
DJ-EventBridge: 4.5

A-SageMaker: 5.18

A-Amazon-Transcribe: 5.20
DJ-Amazon-Transcribe: 2.37

A-Spot-Instances: 5.29
DJ-Spot-Instances: 1.71, 2.3

A-EKS: 5.29

A-AWS-Penetration-Test: 5.46

A-OpenSearch: 5.56
DJ-OpenSearch: 4.8

DJ-CloudSearch: 2.5, 3.36(search-in-s3)

P-Code-Pipeline: 2.22

P-AWS-Inspector: 1.6
Dj-AWS-Inspector(CVE-scan): 3.58


P-AWS-Application-Discovery-Service: 1.17, 1.26, 2.8, 4.18(imp)
DJ-All-Discovery-Services: 2.36, 3.40

DJ-CART-Cloud-Adopation-Teadiness-Tool: 2.36

P-AWS-Service-Catalog: 1.21, 2.13, 6.3

P-SAML: 1.22, 3.6, 6.24
DJ-SAML: 2.34, 2.57

DJ-Web-Identity-Federation: 3.52

DJ-Custom-Identity-Broker: 3.44
DJ-Custom-Identity-Provider: 4.7

DJ-LDAP: 2.41

P-Egress: 2.10

DJ-Code-Build: 3.69

P-Code-Deploy: 2.26
DJ-Code-Deploy: 1.49, 3.75

P-Migration-All: 6.18
DJ-Migration-All: 1.4, 1.37, 1.47, 1.59, 2.2, 2.28. 2.36

P-AWS-Application-Migration-Service (MGN): 3.1, 3.24
DJ-AWS-Application-Migration-Service (MGN): 1.11, 3.31

P-AWS-SMS (Server Migration Service): 4.5, 4.18

P-DMS-(Data-Migration-Service): 4.18, 
DJ-DMS-Data-Migration-Sercice: 2.6

DJ-Schema-Conversion-Tool (SCT): 1.4

P-VMware-Import/Export: 4.19

P-High-Performance-Computing(HPC): 3.4

P-AWS-Elastic-Beanstalk: 3.5, 4.4
DJ-Elastic-Beanstalk: 3.12, 3.48

P-OpsWorks: 3.28, 5.4
DJ-OpsWorks: 1.49, 2.23, 4.18

P-CloudHSM (Cloud HSM): 4.1(i co -> Crypto officers)
DJ-CloudHSM: 1.65, 2.42



P-AWS-(RAM)-Resource-Access-Manager: 4.30, 5.7
DJ-AWS-(RAM)-Resource-Access-Manager: 1.64

P-AWS-Secret-Manager: 5.5
DJ-AWS-Secret-Manager: 1.2, 2.15

DJ-AWS-Systems-Manager-Parameter-Store: 1.15

P-AWS-CodeCommit: 5.12,
DJ-AWS-CodeCommit: 1.48

P-AWS-Compute-Optimizer: 5.17

P-AWS-Trust-Advisor: 5.21

P-EMR-Cluster: 6.30

DJ-AWS-Serverless-Application-Model(SAM): 1.5

DJ-AWS-Textract: 1.22, 3.8
DJ-AWS-Comprehend: 3.8

DJ-AWS-Connect: 1.56, 4.13
DJ-AWS-LEX:     1.56, 4.13

DJ-AWS-Macie: 1.60, 2.62

DJ-AWS-IOT: 3.61

DJ-IOT-Greengrass: 2.60

DJ-Elastic-MapReduce: 3.2, 3.64

DJ-Traffic-Mirroring(for-ec2-logs): 3.33

DJ-AWS-Workspaces: 3.37, 3.66

DJ-AWS-AppStream: 3.65

A-AWS-Cost-Explorer: 5.59(comparision in "Billing dashboard", "AWS Cost Explorer", "Cost and Usage Report")

A-Use-Case: 4.1, 4.31, 4.42, 4.64, 5.18, 5.28, 5.37, 5.50
P-Use-Case: 2.2, 2.5, 2.6, 2.24, 
            3.4, 3.16, 3.23, 3.27, 3.29, 3.30, 
            4.8, 4.9, 4.15, 4.17,4.20, 4.29, 
            5.8, 5.10, 5.28, 
            6.16, 6.20
DJ-Use-Case: 1.20, 1.34, 1.35, 1.38, 1.40, 1.43, 1.44, 1.46, 1.59, 1.62, 1.63, 1.68, 1.69, 1.70, 1.72, 
             2.9, 2.19, 2.72, 3.47, 4.2, 4.12, 4.14, 4.23, 4.24
             


============================================================================================
Some important questions:
-------------------------

Associate:
3.39:

Professional:

AWS Outposts:          <-- Niels Professinal - (Advanced Amazon VPC -vid 43)
AWS Wavelength Zone:   <-- Niels Professinal - (Advanced Amazon VPC -vid 43)
AWS Local Zone:        <-- Niels Professinal - (Advanced Amazon VPC -vid 43)

-) Difference between CloudFormation "ChangeSet" and "StackSets" ? 
-) Difference between "AWS AppStream 2.0"  and "AWS WorkSpace" ? 
-) Difference between "Transit Gateway" and "AWS Resource Access Manager" ?  In "P-4.30" clearly explaind in the explanation.
-) API-Gateway proxy and non-proxy ?
-) Control Tower topic
-) Guardrails, Controls topics
-) CloudFormation question in Professional exam "CreateStack with CAPABILITY_NAMED_IAM"
-) Difference between "service-control-policy"  and "user-based-policy" and "identity-based-policy" and "resource-based-policy" 
-) What is a "service-linked-role" or  "service-linked-role with identity-based policy"
-) SAML 2.0
-) OpenID Connect
-) "IPSec tunnel" and "IPsec connection"
-) Can we use "IPSec" with "VPN connection"  or "Direct-Connect"
-)  DynamoDB's Fine Grained Access Control for authentication and authorization
-) Difference between "s3-server-side-encryption"  and "S3-Managed-Encryption-keys"
-) Difference between "geoproximity" and "geolocation" routing ?
-) What is an Alias record in Route-53 ?


Difficults words:
-------------------
fluctuate           <-- traffic is fixed, it does not gowes up or down.



========================================================================================================
IAM roles important points:
---------------------------
-) Cross-account access is primarily used for scenarios where you need to grant your IAM users permission 
   to switch to roles within your AWS account or to roles defined in other AWS accounts that you own.
-----------------------------
-) Kinesis-Data-Stream: It offers a longer-term, durable storage.
-) Kinesis-Data-Firehose: It has a feature to buffer data and supports data transformation in near-real-time.
                          so in this case no need to store the data.


=================================================================================================
Database imp points:
-------------------

-) Global tables is a feature of Amazon DynamoDB and is not available for Amazon RDS.
-) Multi-master configurations are only available for Amazon Aurora and only within a Region.
-) Aurora global database does not allow writes in multiple Regions, only reads.
---------------------------------------------------
-) Aurora Global DB: In a Region-Outage or Failover of the primary-DB region, one of the secondary regions 
   can be promoted to read and write capabilities in less than 1 minute. IT means if primery-region-A is fialed
   then less then 1 min the secondary-region is ready for getting read/write requests.
-) Amazon RDS: when we have two instances, One master DB in Region-A and second read in Region-B, if A goes down
   then first we have to make manually promote the B DB to become master, this process takes many minutes
   as it need to reboot the DB.
-) Aurora  automated backups only occur once every day during the defined backup window, we can set a backup for every
   5-min  or every 1-hour.
----------------------------------------------------
-) Read replicas are available in Amazon RDS for MySQL, MariaDB, Oracle, and PostgreSQL as well as Amazon Aurora.
-) Amazon DynamoDB table in which each entry is limited to 400 KB only.
-------------------------------------------------------------
-) Amazon RDS for MySQL or all "Amazon RDS": assume we have one "Standby" instance and one "Read-Replica", In this case
  if "Standby" has a failover then it take up to 60s to revocer. If the "Read-Replica" has a failover then it can take 
  upto 35s to recover.
---------------------------------------------------------------
-) When you provision a Multi-AZ DB Instance, Amazon RDS automatically creates a primary DB Instance and synchronously 
   replicates the data to a standby instance in a different Availability Zone (AZ). Each AZ runs on its own physically distinct, 
   independent infrastructure and is engineered to be highly reliable.
---------------------------------------------------------------
-) Assume we have "Multi-AZ-RDS-MySQL-DB", so it means it is deployed in three Avalibility-zones, we can add also "Read-Replica"
   in RDS for each Availability-Zone, with this all the "Read-query" pressuer will be come directly to "Read-Replica" and the 
   primary DB has less pressuer and make a good performance for "Update-query" 





-----------------------------------------------------
-) Amazon EFS uses the NFS protocol which is primarily used by Linux AMIs. This filesystem does not support Windows ACLs.
-) "Amazon-FSx-for-Lustre" filesystem is used for Linux based instances.
-) For "Windows-Ec2" use "Amazon-FSx-for-Windows-File-Server" file system. 
--------------------------------------------------------
-)  Multi-Attach EBS volumes can only be attached on instances within the same Availability Zone. means if we want to
   attach mutli-EBS volumes to a single instance then this instance can not span though other "Availability-zones"
--------------------------------------------------------------
-) 



RTO:
---- 
It defines how quickly a service must be restored and a recovery point objective.
RTO of 30 minutes means the service must be running again within half an hour.

RPO:
----
It defines how much data it is acceptable to lose.
RPO of 5 minutes means no more than 5 minutesâ€™ worth of data can be lost.


==================================================================================
i am on  4.35

HPC:           High Performance Computing
NAS:           Network Attached Storage
RBP:           Resource-based-policy

DX:            Aws Direct Connect
DX Gateway:    Direct Connect gateway
VIFs:          Public or private Virtural Interface

VGW:           Virtual Private Gateway
CGW            Customer Gateway


OLAP:          Online analytical processing
OLTP:          Online Transaction Processing 
S3-WORM        S3 - write-once-read-many

ERM             Amazon Elastic MapReduce

PII           Personally Identifiable Information 
OLTP          Online Transaction processing
OLAP          Online Analytics processing



Protocols:
----------
SMB:           Server Message Block (protocol)  
UDP:           User Datagram Protocol (Protocol)
MPI:           Message Passing Interface (Protocol)
BGP            Broder Gateway PRotocol
BGP-ECMP       Broder Gateway PRotocol - Equal-cost multipathing

Ports:
------
80:       <-- Browser
80:       <-- HTTP
443:      <-- HTTPS

Federation: it means we have an "Identity-source" in On-premis datacenter, and we want to use this same source to authenticate
the resources in the AWS cloud. Identit-soucre means users with roles defined in the on-premis datacenter


#############################################################################################################
Important Points:
-----------------

Permissions-boundaries:
----------------------
Permissions boundaries apply to user accounts


Cluster Placement Group:
------------------------
A cluster placement group provides low latency and high throughput for instances deployed in a single AZ. 
It is the best way to provide the performance required for this application.

It packs instances close together inside an Availability Zone. This strategy enables workloads to achieve the 
low-latency network performance necessary for tightly-coupled node-to-node communication that is typical of 
HPC applications

Partition Placement Group:
--------------------------
A partition placement group is used for grouping instances into logical segments. It provides control and 
visibility into instance placement but is not the best option for performance.

It spreads your instances across logical partitions such that groups of instances in one partition do not 
share the underlying hardware with groups of instances in different partitions. This strategy is typically 
used by large distributed and replicated workloads, such as Hadoop, Cassandra, and Kafka

Spread Placement Group:
----------------------
A spread placement group is a group of instances that are each placed on distinct racks, with each rack 
having its own network and power source. Spread placement groups are recommended for applications that have 
a small number of critical instances that should be kept separate from each other. Launching instances in 
a spread placement group reduces the risk of simultaneous failures that might occur when instances share 
the same racks. Spread placement groups provide access to distinct racks, and are therefore suitable for 
mixing instance types or launching instances over time.
It is not the best option for performance.

It strictly places a small group of instances across distinct underlying hardware to reduce correlated failures.


Cluster Placement group              Spread Placement Group              Partition Placement Group
-------------------------------| -----------------------------      | ----------------------------
What:                          |                                    | 
Instances are placed into a    | Insrtances are spred across        | Instances are grouped into logical segments called
low-latency group within a     | underlying hardware                | partitions which use distinct hardware
Single AZ                      |                                    | 
                               |                                    | 
When:                          |                                    | 
Need low network latency and/or| Reduce the risk of simultaneous    | Need control and visibility into instances placement 
high network throughput        | instance failure if underlying     | 
                               | hardware fails                     | 
Pros:                          |                                    |   
Get the most out of enhanced   | Can span multiple AZs              |  Reduces likelihood of correlated failures for
networking Instances           |                                    |  large workloads
                               |                                    | 
Cons:                          |                                    | 
Finite capacity recommend      | Maximum of 7 instances running     | Partition placement groups are not supported for
launching all you might need   | per group, per AZ                  | Dedicated Hosts
up front        

#######################################################################################################################
Elastic Fabric Adapter (EFA):
----------------------------
Elastic Fabric Adapter (EFA) is a network interface for Amazon EC2 instances that enables customers to run applications requiring 
high levels of inter-node communications at scale on AWS. Its custom-built operating system (OS) bypass hardware interface
enhances the performance of inter-instance communications, which is critical to scaling these applications.



#################################################################################################################
Direct-Connect connection DX 
----------------------------
-) a network device that supports Border Gateway Protocol (BGP) and BGP MD5 authentication is needed to establish a
   Direct Connect link from your data center to your VPC.





VPN  Connection:
----------------
-)  VPN connection based on a customer gateway and a virtual private gateway (VPG) in AWS.









###########################################################################################################################
Elastic Beanstalk:
-----------------

To maintain full capacity during deployments, you can configure your environment to launch a new batch of instances 
before taking any instances out of service. This option is known as a rolling deployment with an additional batch. 
When the deployment completes, Elastic Beanstalk terminates the additional batch of instances.''

Immutable deployments perform an immutable update to launch a full set of new instances running the new version of 
the application in a separate Auto Scaling group alongside the instances running the old version. Immutable 
deployments can prevent issues caused by partially completed rolling deployments. If the new instances don't pass
health checks, Elastic Beanstalk terminates them, leaving the original instances untouched.


All at once â€“ 
-----------
The quickest deployment method. Suitable if you can accept a short loss of service and if quick deployments are important 
to you. With this method, Elastic Beanstalk deploys the new application version to each instance.

Rolling â€“ 
--------
Avoids downtime and minimizes reduced availability at a cost of a longer deployment time. Suitable if you can't accept 
any period of completely lost service. With this method, your application is deployed to your environment one batch of instances at a time.

Rolling with additional batch â€“ 
-----------------------------
Avoids any reduced availability at a cost of an even longer deployment time compared to the Rolling method. Suitable 
if you must maintain the same bandwidth throughout the deployment. With this method, Elastic Beanstalk launches an 
extra batch of instances, then performs a rolling deployment.

Immutable â€“ 
----------
A slower deployment method that ensures your new application version is always deployed to new instances instead 
of updating existing instances. It also has the additional advantage of a quick and safe rollback in case the deployment fails.

Traffic splitting â€“ 
-----------------
A canary testing deployment method. Suitable if you want to test the health of your new application version using a 
portion of incoming traffic while keeping the rest of the traffic served by the old application version.

For deployments that depend on resource configuration changes or a new version that can't run alongside the old version, 
you can launch a new environment with the new version and perform a CNAME swap for a blue/green deployment.

Because AWS Elastic Beanstalk performs an in-place update when you update your application versions, your 
application can become unavailable to users for a short period of time. You can avoid this downtime by 
performing a blue/green deployment, where you deploy the new version to a separate environment and then swap CNAMEs 
of the two environments to redirect traffic to the new version instantly. With this method, you can have two 
independent environments and you can quickly switch between the version by swapping the URLs.



#######################################################################################################################


#####################################################################################################################
AWS Global Accelerator :
-------------------------
AWS Global Accelerator provides improved performance and high availability when you have copies of your application 
running in multiple AWS Regions

##########################################################################################################################
AWS App Runner:
--------------
AWS App Runner can be used to quickly deploy containerized web applications and APIs, at scale and with no prior 
infrastructure experience required.


##################################################################################################################################
IAM:
====

Types of policies we have:
1) Identity-based policies
2) Resource-based policies
3) IAM Permissions boundaries polices
4) AWS Organizations service control policies (SCP)
5) Session policies


Role:
-----
Roles are assumed by users, applications and services.


Principal:
---------
A principal is a person or application that make a request for an action on an AWS resource



Permissions boundaries:
-----------------------
Permissions boundaries are applied to IAM entities (users or roles), not to AWS accounts.



-------------------------------------------------------------------------------------
Identity based policy: 
---------------------
It is applied to Users, Groups and Roles

Inline policy:
-------------
This policy we define only for 1-to-1 relationship, it means we create this policy only for 1 user or group or role
If we create a "Inline policy" for a resource, it can not be used with another resource.
Once we delete the User or group or role then this "Inline policy" will automatically deleted. (Niels Video: 24)

Managed Policy:
----------------
Managed Policy can be "AWS Managed Policy"  or "Customer Managed Policy"
We can attach a single "Managed Policy" to a User, Group or Role, so one policy can be used with many other

----------------------------------------------------------------------------------------
Resource based policy: 
---------------------
It is applied to AWS resources e.g: S3 bucket, 
It means define permissions for a principal accessing the resource.

{
   "Version": "2012-10-17",
   "Id": "PutObjPolicy",   
   "Statement": [
      {
         "Sid": "AllowObjectsThatAreNotSSEKMS",
         "Effect": "Allow",
         "Principal": {
            "AWS": "arn:aws:iam::51514584512:user/Paul"             <-- "Principal" here is a user who want to perform a request or action
         },
         "Action": "s3:PutObject",
         "Resource": "arn:aws:s3:::DOC-EXAMPLE-BUCKET/*",                    <-- it means on which specific bucket we want to apply this policy
      }
   ]
}

-------------------------------------------------------------------------------------------
Trust Policy:
-------------
Trust policies control who can assume the role

Example of Trust:

{
   "Effect": "Allow",
   "Principal":  {
      "Service": "ec2.amazonaws.com"
   },
   "Action": "sts:AssumeRole"
}

------------------------------------------------------------------------------------------
Permissions Policy:
-------------------
It is a example of "Identiry Policy"



Sessions Policies:
-----------------

These are used with "AssumeRole" API actions
---------------------------------------------------------------------------------
RBAC (Role Based Access Conrol)
------------------------------
It means we define a group of users and attach policies/roles to that group.




ABAC (Attribute Based Access Control) (Niels Video-25)
-------------------------------------
It means we create "tags" on each resourse

{
   "Effect": "Allow",
   "Action": [
      "rds:RebootDBInstance",
      "rds:startDBInstance"
   ]
   "Resource": "*",
   "Condition": {
     "StringEquals": {
        "aws:PrincipalTag/Department": "DBAdmins",        <-- if a User(Principal) has a "Tag=DBAdmins",
        "rds:db-tag/Environment": "Production"             then he is alloweed to perform the above actions on the resource
     }
   }
}


---------------------------------------------------------------------------------------------
Service role: 
-------------
A service role is an AWS Identity and Access Management (IAM) that grants permissions to an AWS service so that the 
service can access AWS resources. Only a few Systems Manager scenarios require a service role. When you create a 
service role for Systems Manager, you choose the permissions to grant in order for it to access or interact with 
other AWS resources.

Service-linked role: 
-------------------
A service-linked role is predefined by Systems Manager and includes all the permissions that the service requires 
to call other AWS services on your behalf.

If you plan to use Systems Manager to manage on-premises servers and virtual machines (VMs) in what is called 
a hybrid environment, you must create an IAM role for those resources to communicate with the Systems Manager service.



##############################################################################################################################
AWS Transit gateway Vs AWS Resource Access Manager(RAM)
-------------------------------------------------------
Transit gateway by default only allows VPCs from the same AWS account to be attached. For our cross-account scenario, 
weâ€™ll have to use another AWS service called the "AWS Resource Access Manager" (RAM).



###########################################################################################################
Cloudwatch Dashboard     vs  CloudWatch Logs insights:


Cloudwatch Dashboard:
-------------------
Amazon CloudWatch dashboard is primarily used for scenarios where you have to monitor your resources in a single view, 
even those resources that are spread across different AWS Regions.

CloudWatch Logs Insights:
-------------------------
CloudWatch Logs Insights instead since it enables you to interactively search and analyze your log data

###############################################################################################################################
AWS EMR Cluster:
---------------
EMR is a hosted Hadoop framework for running analytics on big data


0044 7799401577
###############################################################################################################################
AWS AppSync:
------------

AWS AppSync can be used to provide a GraphQL API that can be used to query multiple databases, microservices,
and APIs (allow the retrieval of data from multiple data sources).


#########################################################################################################
AWS Code Commit:
---------------
when we commit a code with code-commit, we can build upto 10 trigger, these trigger will be executed every
time when we commit code to that repository.


###################################################################################################
AWS Migration Hub:
-------------------
AWS Migration Hub simply provides a single location to track the progress of application migrations across multiple 
AWS and partner solutions. Using Migration Hub just allows you to choose the AWS and partner migration tools 
that best fits your needs while providing visibility into the status of migrations across your portfolio of applications.


###################################################################################################################
Other Services or Importan services:
===================================

AWS Ground Station:
------------------
AWS Ground Station is a fully managed service that lets you control satellite communications, process data, and scale 
your operations without having to worry about building or managing your own ground station infrastructure



AWS Elemental MediaConnect:
---------------------------
AWS Elemental MediaConnect is just a high-quality transport service for live video.



Amazon Polly:
-------------
Amazon Polly is a machine learning service, it is quite limited as it just turns text into lifelike speech that 
allows you to create applications that talk and build entirely new categories of speech-enabled products.



Amazon Comprehend:
----------------
Amazon Comprehend is used to derive and understand valuable insights from text within documents

AWS Device Farm:
----------------
AWS Device Farm to send out the offers to the mobile app

Amazon Pinpoint:
----------------
Amazon Pinpoint to send push notifications,


AppFlow:
--------
AppFlow is used to securely transfer data between Software-as-a-Service (SaaS) applications like 
Salesforce, SAP, Zendesk, Slack, and ServiceNow, and AWS services

############################################################################################################################
Virtual Interfaces:    Best link:  https://docs.aws.amazon.com/whitepapers/latest/aws-direct-connect-for-amazon-connect/virtual-interfaces-vif.html
-----------------


Public Virtual Interface:
------------------------




Private Virtual Interface:  ( private VIF )
-------------------------
private virtual interface across the Direct Connect connection to connect to the VPC using private IP addresses. 
A VPC endpoint for Amazon API Gateway can be created and this will provide access to API Gateway using private IP 
addresses and avoids the internet completely.



Hosted Virtual Interface:
-------------------------
A hosted virtual interface is used to allow another account to access your Direct Connect link.



Transit Virtual Interface:  ( transit VIF )
-------------------------
A transit virtual interface is used to access one or more Amazon Transit Gateways associated with Direct Connect gateways.

===========================================================================================
TensorFlow AMI:
---------------

===============================================================================================
AWS Kinesis Data Streams:
------------------------
Amazon Kinesis Data Streams using one shard. A single shard is limited to 1 MB or 1000 messages/sec


============================================================================================
API Gateway:
------------
You can enable API caching in Amazon API Gateway to cache your endpoint's responses. With caching, you can reduce 
the number of calls made to your endpoint and also improve the latency of requests to your API.

When you enable caching for a stage, API Gateway caches responses from your endpoint for a specified time-to-live (TTL) 
period, in seconds. API Gateway then responds to the request by looking up the endpoint response from the cache instead 
of making a request to your endpoint. The default TTL value for API caching is 300 seconds. The maximum TTL value is 
3600 seconds. TTL=0 means caching is disabled.

Note:
We can not integrate API Gateway directly to  DynamoDB when using an HTTP API.



=============================================================================================
SQS:
----
SQS has a maximum message size of 256 KB
SQS FIFO queue can only handle 3000 messages per second.

====================================================================================================
AWS Config:
----------
AWS Config is a service that enables you to assess, audit, and evaluate the configurations of your AWS resources.

AWS Config tracks changes in the configuration of your AWS resources, and it regularly sends updated configuration details 
to an Amazon S3 bucket that you specify. For each resource type that AWS Config records, it sends a configuration history 
file every six hours.

- AWS Config is a service used to track and remediation any unauthorized configuration changes made with your AWS Account

==============================================================================================
CloudTrail Logs:
---------------
CloudTrail is a web service that records AWS API calls for your AWS account and delivers log files to an Amazon S3 bucket. 
The recorded information includes the identity of the user, the start time of the AWS API call, the source IP address, 
the request parameters, and the response elements returned by the service.

-You cannot configure CloudTrail logs to be sent directly to an SQS queue.

-AWS AWS CloudTrail which keeps detailed logs of all API calls made within the account such as who logged in, 
 which AWS Identity and Access Management (IAM) role is being used and also how they interact with the AWS Cloud.


=================================================================================================
AWS Server Migration Service (AWS- SMS)
--------------------------------------
The SMS service is used for migrating virtual machines such as VMware vSphere and Windows Hyper-V.  not data.


AWS Application Migration Service (MGN) 
----------------------------------------
AWS MGN supports syncing of attached volumes as well, so you don't have to migrate the data volumes manually.
AWS Application Migration Service (MGN) is primarily used to migrate virtual machines only, which can be 
from VMware vSphere and Windows Hyper-V to your AWS cloud



AWS Data Pipeline:
------------------
AWS Data Pipeline is primarily used to quickly and easily provision pipelines that remove the development and 
maintenance effort required to manage your daily data operations which lets you focus on generating insights 
from that data. Although you can use this to connect your data on your on-premises data center,


==================================================================================================
Amazon Keyspaces:
-----------------
Amazon Keyspaces (for Apache Cassandra) is a scalable, highly available, and managed Apache Cassandraâ€“compatible database servic

=======================================================================================
Amazon Athena:
-------------
Amazon Athena is an interactive query service that makes it easy to analyze data in Amazon S3 using standard SQL. 
Athena is serverless, so there is no infrastructure to setup or manage, and you can start analyzing data 
immediately. While Amazon Athena is ideal for quick, ad-hoc querying, it can also handle complex analysis,
 including large joins, window functions, and arrays.

Athena is the fastest way to query the data in Amazon S3 and offers the lowest operational overhead 
as it is a fully serverless solution.

Note: Amazon Athena supports encrypted data for both the source data and query results, It means it can query on the 
      encrypted data.


Athena Federated Query:
-----------------------
Athena Federated Query, you can run SQL queries across data stored in relational, non-relational, object, and custom data sources.
Athena uses data source connectors that run on AWS Lambda to run federated queries. A data source connector is a piece of 
code that can translate between your target data source and Athena. You can think of a connector as an extension of Athena's 
query engine. Prebuilt Athena data source connectors exist for data sources like Amazon CloudWatch Logs, Amazon DynamoDB, 
Amazon DocumentDB, and Amazon RDS, and JDBC-compliant relational data sources such MySQL, and PostgreSQL under the Apache 2.0 license.

===============================================================================================
Amazon Transcribe: (for voice, audio)
-------------------
Amazon Transcribe converts audio input into text, which opens the door for various text analytics applications on voice input. 
For instance, by using Amazon Comprehend on the converted text data from Amazon Transcribe, customers can perform sentiment 
analysis or extract entities and key phrases.


Amazon Rekognition: (for video)
-------------------
Amazon Rekognition Video can detect objects, scenes, faces, celebrities, text, and inappropriate content in videos. 
You can also search for faces appearing in a video using your own repository or collection of face images.


Amazon Translate:
----------------
Amazon Translate can provide automatic translation to enable cross-lingual communications between users for your applications.

Amazon Textract:
----------------
Amazon Textract is a machine learning (ML) service that automatically extracts text, handwriting, and data from scanned documents.
=================================================================================================================
Amazon QuickSight.
------------------
Amazon QuickSight would have worked for one time data set which only needed visualization. For any new data, analysis 
would need to be performed again. Also, you connect user and groups in your QuickSight account but not IAM Roles

===============================================================================================================
AWS App Mesh:
------------
AWS App Mesh is used for application-level networking for microservices applications.


================================================================================================================
Amazon EFS:
-------------
Amazon EFS is a file system that is accessed using the NFS protocol and is suitable for Linux clients only. 
This is not natively supported for Window Servers,

================================================================================================================
Amazon FSx:
----------
Amazon FSx also provides rich integration with other AWS services like AWS IAM, AWS Directory Service for Microsoft Active Directory, 
Amazon WorkSpaces, AWS Key Management Service, and AWS CloudTrail.

=================================================================================================================
AWS MAnaged Microsoft AD:
========================

One-way-trust: 
--------------
we can create a trust relationsship between "On-premises AD" and "AWS Managed Microsoft AD"
It means users in one AD are Authenticate and Authorized to connect to resourses in another AD.

Two-way-trust: 
--------------
we can create a trust relationsship between "On-premises AD" and "AWS Managed Microsoft AD"
It means users in both ADs are Authenticate and Authorized to connect to resourses in each-other AD.


===================================================================================================================
Amazon RDS MySQL databases:
-------------------------
With MySQL, authentication is handled by AWSAuthenticationPluginâ€”an AWS-provided plugin that works seamlessly with IAM 
to authenticate your IAM users. Connect to the DB instance and issue the CREATE USER statement, as shown in the following example.

CREATE USER jane_doe IDENTIFIED WITH AWSAuthenticationPlugin AS 'RDS';
The IDENTIFIED WITH clause allows MySQL to use the AWSAuthenticationPlugin to authenticate the database 
account (jane_doe). The AS 'RDS' clause refers to the authentication method, and the specified database account 
should have the same name as the IAM user or role. In this example, both the database account and the IAM user or role are named jane_doe.



================================================================================================================
AWS DataSync:
-------------
AWS DataSync can be used to move large amounts of data online between on-premises storage and Amazon S3, Amazon EFS, or 
Amazon FSx for Windows File Server. The source datastore can be Server Message Block (SMB) file servers.

=========================================================================================================
ElastiCache  Redis:
-------------------

Note: The Redis engine does not support multiple CPU cores or threads.  <-- so no multiple threads can work together

Enctryption with Redis:

ElastiCache in-transit encryption implements the following features:

1) Encrypted connectionsâ€”both the server and client connections are Secure Socket Layer (SSL) encrypted.
2) Encrypted replicationâ€”data moving between a primary node and replica nodes is encrypted.
3) Server authenticationâ€”clients can authenticate that they are connecting to the right server.
4) Client authenticationâ€”using the Redis AUTH feature, the server can authenticate the clients

Amazon ElastiCache in-transit encryption is an optional feature that allows you to increase the security of 
your data at its most vulnerable pointsâ€”when it is in transit from one location to another. Because there is 
some processing needed to encrypt and decrypt the data at the endpoints, enabling in-transit encryption can 
have some performance impact. You should benchmark your data with and without in-transit encryption to determine 
the performance impact for your use cases.


ElastiCache  Memcached:
-----------------------
The memached engine supports multiple cores and threads and large nodes. so Multi-threading works with Memcache.





==============================================================================================================
EBS:   
----
-) We can multi-attach an EBS volume to multiple EC2 instances but the instances must be in the same AZ.
You cannot attach EBS volumes in different AZs to an instance.

-) All EBS types support encryption and all instance families now support encryption.
-) Not all instance types support encryption.
-) Data in transit between an instance and an encrypted volume is also encrypted (data is encrypted in trans).
-) You can have encrypted an unencrypted EBS volumes attached to an instance at the same time.
-) Snapshots of encrypted volumes are encrypted automatically.
-) EBS volumes restored from encrypted snapshots are encrypted automatically.
-) EBS volumes created from encrypted snapshots are also encrypted.


EBS Multi-Attach:
-----------------
Amazon EBS Multi-Attach enables you to attach a single Provisioned IOPS SSD ( io1 or io2 ) volume to multiple instances that 
are in the same Availability Zone. You can attach multiple Multi-Attach enabled volumes to an instance or set of instances.


=================================================================================================
AWS Systems Manager
===================

Note: AWS Systems Manager Maintenance Windows is designed to select a defined window of time in which you EC2 instances will be patched.

-) Systems Manager Automation is designed to configure and manage instances with custom runbooks or pre-defined runbooks maintained 
by AWS, not for building and deploying serverless applications on AWS Lambda.


AWS Systems Manager Patch Manager:
---------------------------------
Use AWS Systems Manager Patch Manager to install the tool on all of the EC2 instances within a single patch



=================================================================================================
Lambda @ Edge                 vs                             CloudFront Functions
-------------                                             ----------------------
It runs at the "CloudFront Regional Edge Cache:     |  Their are 218+  Edge Locations in the world, This "CloudFront Functions"
Their are 13 "Regional Edge Caches" are available   |  can run on these "Edge Location" that is really close to the end user.
so this Lambda can run on these 13 region Edges     |  So it takes less latency, and it is 6-times cheaper then "Lambda-@-Edge"
                                                    | Note: their are 13 "Regional-Edge-Caches" location in the world and every
                                                    |       "Regional-Edge-Caches" has many "Edge Locations", then "Edge Locations"
                                                    |       are situated near to the end-users


https://www.google.com/search?client=firefox-b-d&sxsrf=AB5stBiTgy-tCG-SY5FNzExyGp0Yl2kADg:1688643753840&q=cloudfront+functions+vs+lambda%40edge&uds=G04A-MXytn38IJj124QiRKGo-tv_FNgwfUo041QkmThBmsWFXb0YMptKNu3mw5W9HmSiEzM-&tbm=isch&sa=X&ved=2ahUKEwjt3OWYgPr_AhXQ66QKHeI_BjwQ0pQJegQICxAB&biw=2061&bih=841&dpr=1.76#imgrc=OCY79Uzhgo7MvM



CloudFront  or   ALB
SNI - Server Name Identification
--------------------------------
In the Application-Load-Balancer normally we have only one certificate that has one "root" domaine and sub-domain from this root domain, but now A
new function come name "SNI" , it helps us to provide two completely seperate "root" domains, this means now we can add two certificates 
with Application-load-balancer. 


=====================================================================================================
AWS Firewall Manager:
--------------------
AWS Firewall Manager simplifies your administration and maintenance tasks across multiple accounts and resources for a variety 
of protections, including AWS WAF, AWS Shield Advanced, Amazon VPC security groups, AWS Network Firewall, and Amazon Route 53 
Resolver DNS Firewall. With Firewall Manager, you set up your protections just once and the service automatically applies 
them across your accounts and resources, even as you add new accounts and resources.

=================================================================================================
AWS WAF    vs   AWS Shield:
--------------------------
The primary difference between AWS Shield and WAF is that while AWS WAF can mitigate DDoS attacks at layer 7 of the OSI reference model, 
AWS Shield protects web services from DDoS attacks at layer 3 and 4 of the OSI reference model.

===============================================================================================================
Route 53
========

Note:
-) To route domain traffic to an ELB load balancer, use Amazon Route 53 to create an alias record that points to your load balancer. 

An alias record is a Route 53 extension to DNS. It's similar to a CNAME record, but you can create an alias record both for the 
root domain, such as example.com, and for subdomains, such as www.example.com. (You can create CNAME records only for subdomains). 
-) For EC2 instances, always use a Type A Record without an Alias. 
-) For ELB, Cloudfront, and S3, always use a Type A Record with an Alias, 
-) For RDS, always use the CNAME Record with no Alias.



Simple routing policy â€“ 
---------------------
Use for a single resource that performs a given function for your domain, for example, a web server that serves 
content for the example.com website.

Failover routing policy
-----------------------
Use when you want to configure active-passive failover.

Geolocation routing policy
--------------------------
Use when you want to route traffic based on the location of your users.

Geoproximity routing policy â€“ 
--------------------------
Use when you want to route traffic based on the location of your resources and, optionally, shift traffic from 
resources in one location to resources in another.

Latency routing policy â€“ 
----------------------
Use when you have resources in multiple AWS Regions and you want to route traffic to the region that provides the best latency.

Multivalue answer routing policy â€“ 
----------------------------------
Use when you want Route 53 to respond to DNS queries with up to eight healthy records selected at random.

Weighted routing policy â€“ 
------------------------
Use to route traffic to multiple resources in proportions that you specify.


=====================================================================================================================
AWS CodeDeploy:
--------------

When using AWS CodeDeploy with AWS Lambda there are three ways traffic can be shifted during a deployment:

Canary: 
-------
Traffic is shifted in two increments. You can choose from predefined canary options that specify the percentage of traffic 
shifted to your updated Amazon ECS task set / Lambda function in the first increment and the interval, in minutes, 
before the remaining traffic is shifted in the second increment.

Linear: 
------
Traffic is shifted in equal increments with an equal number of minutes between each increment. You can choose from 
predefined linear options that specify the percentage of traffic shifted in each increment and the number of minutes between each increment.

All-at-once: or  "in-place"
------------
All traffic is shifted from the original Lambda function to the updated Lambda function all at once.

Note: AWS Lambda and Amazon ECS deployments cannot use an in-place deployment type.

Blue/green: 
-----------
Traffic is shifted from one version of a Lambda function to a new version of the same Lambda function.



===================================================================================================================
AWS Control-Tower:
------------------
AWS Control Tower automates the setup of a new landing zone using best practices blueprints for identity, federated access, 
and account structure.

The account factory automates provisioning of new accounts in your organization. As a configurable account template, 
it helps you standardize the provisioning of new accounts with pre-approved account configurations. You can configure 
your account factory with pre-approved network configuration and region selections.

===================================================================================================
AWS Snowball Edge devices:
------------------------
AWS Snowball Edge is a type of Snowball device with on-board storage and compute power for select AWS capabilities. 
Snowball Edge can do local processing and edge-computing workloads in addition to transferring data between your 
local environment and the AWS Cloud.

You can run Amazon EC2 compute instances on a Snowball Edge device using the Amazon EC2 compatible endpoint,
which supports a subset of the Amazon EC2 API operations. Data can subsequently be transferred to Amazon S3 
for storage and additional processing.

Note:
-) An AWS Snowball Edge device can hold up to 100 TB of data

=================================================================================================
AWS Batch:
An AWS Batch multi-node parallel job is compatible with any framework that supports IP-based, 
internode communication, such as Apache MXNet, TensorFlow, Caffe2, or Message Passing Interface (MPI).

===================================================================================================
Cognito:
========
You cannot use Cognito to connect S3 to Active Directory.


User Pools: ( see Niels Professionl video  41, clearly explained )
-----------
In that case user-identity (username, passwords,roles) are savend in "Cognito User Pool" , when a user make a call
to the API-Gateway then the request goes to "Cognito User Pool" it check if it is valid or not, after validation 
it return a JWT token and with this JWT token a user can authenticate it with the API-Gateway and make further call


Identity Pools:( see Niels Professionl video  41, clearly explained )
--------------
In this case user-Identity (username, passwords,roles) are saved in the "Cognito User Pool" and after authorizing
the call goes to "Cognito Identity Pool" and user get a STS token, in STS token user get "temporary credentials"
and "limited-prvilege" to the resource and after it assume a "IAM Role" that it should be with this "STS token"
and with the help of this "IAM Role" it will access the resourse.


======================================================================================================
AWS Comprehend:
----------------
Amazon Comprehend is a natural-language processing (NLP) service that uses machine learning to uncover 
valuable insights and connections in text.
You could easily use Amazon Comprehend to detect customer sentiment and analyze customer interactions 
and automatically extract insights from customer surveys to improve your products. An S3 Data Lake 
also acts as an ideal data repository for Machine Learning data used by many different business units and applications.

Amazon Textract:
----------------
Amazon Textract is a machine learning (ML) service that automatically extracts text, handwriting, 
and data from scanned documents

Amazon Kendra:
-------------
Amazon Kendra is a highly accurate intelligent search service powered by machine learning

====================================================================================================
Disaster Recovery Strategy:
--------------------------

1) Backup and restore Strategy:
-------------------------------
This is the lowest cost DR approach that simply entails creating online backups of all data and applications.
OR
When you have a few hours to achieve disaster recovery, copying AMIâ€™s across regions is an achievable solution. 
AWS CloudFormation can then be used to quickly spin up the instances in the second region when a disaster recovery 
event occurs. This is the most cost-effective option as only the active site has running instances.

2) Pilot Light Strategy:
------------------------
In this DR approach, you simply replicate part of your IT structure for a limited set of core services so 
that the AWS cloud environment seamlessly takes over in the event of a disaster.

A small part of your infrastructure is always running simultaneously syncing mutable data 
(as databases or documents), while other parts of your infrastructure are switched off 
and used only during testing.

Unlike a backup and recovery approach, you must ensure that your most critical core elements 
are already configured and running in AWS (the pilot light). When the time comes for recovery, 
you can rapidly provision a full-scale production environment around the critical core.

3) Warm standby Strategy:
--------------------------
The term warm standby is used to describe a DR scenario in which a scaled-down version of a fully 
functional environment is always running in the cloud.


4) Multi-site Strategy:
-----------------------
A multi-site solution runs on AWS as well as on your existing on-site infrastructure in an active- active configuration.


============================================================================================
Standard Queue                                                    FIFO Queue
--------------                                                 ------------------
1) Unlimited Throughput:                                  | 1) High Throughput: FIFO queues support up tp 300 message     
Standard queues support a                                 |    per second (300 send, receive, or delete operations per second).
nearly unlimited number of transactions per second        |When you batch 10 messages per operation(maximum). FIFO queues can support up to
per API Action                                            | 3000 messages per second.
                                                          |
2) Best Effort Ordering occasionally, messages might      |2) First-In-First-Out Delivery. The order in which messages are sent and 
be delivered in an order different from which they        |   received is strictly preserved.
were sent                                                 |
                                                          | 
3) At-Least-Once Delivery:                                |3) Exactly-Once Processing: A message is delivered once and remains available
A message is delivered at least once, but Ocassionally    |   until a consumer processes and deletes it, Duplicates are not introduced into
more than one copy of a message is delivered              |   the queue


==================================================================================================
DynamoDB:
--------
Amazon DynamoDB is a NoSQL database and is ideal for storing session data. The data will be both highly available and durable and 
can be stored persistently. DynamoDB also offers time to live (TTL) attributes that can be used to automatically expire 
items from the table after specified time periods.


DynamoDB Accelerator:
--------------------
DAX is a DynamoDB-compatible caching service that enables you to benefit from fast in-memory performance for demanding applications. 
DAX addresses three core scenarios:

1. As an in-memory cache, DAX reduces the response times of eventually consistent read workloads by an order of magnitude from 
single-digit milliseconds to microseconds.

2. DAX reduces operational and application complexity by providing a managed service that is API-compatible with DynamoDB. 
Therefore, it requires only minimal functional changes to use with an existing application.

3. For read-heavy or bursty workloads, DAX provides increased throughput and potential operational cost savings by reducing 
the need to overprovision read capacity units. This is especially beneficial for applications that require repeated reads for individual keys.

DynamoDB accelerator is the best solution for caching the reads and delivering them at extremely low latency.


=============================================================================================
EC2:
====

On-Demand Capacity Reservations:
-------------------------------
On-Demand Capacity Reservations enable you to reserve compute capacity for your Amazon EC2 instances in a 
specific Availability Zone for any duration. By creating Capacity Reservations, you ensure that you always 
have access to EC2 capacity when you need it, for as long as you need it. When used in combination with 
savings plans, you can also gain the advantages of cost reduction.

On-Demand Capacity Reservations enable you to reserve compute capacity for your Amazon EC2 instances in a 
specific Availability Zone for any duration.

When creating Capacity Reservations, you ensure that you always have access to EC2 capacity when you need it,
for as long as you need it, in this case for 5 days. You can create Capacity Reservations at any time, 
without entering a one-year or three-year term commitment.

Also, when you create a Capacity Reservation, you specify:
- The Availability Zone in which to reserve the capacity.
- The number of instances for which to reserve capacity.
- The instance attributes, including the instance type, tenancy, and platform/OS.

Note: 
- Reserved Instances do not provide guaranteed capacity 

---------------------------------------------------------
Ec2 AutoScaling:
================

1) Simple-Scaling-Policy:
---------------------
It is used for making simple adjustments up or down based on a threshold value


2) Step-Scaling-Policy:
-------------------
It is used for making step adjustments that vary based on the size of the alarm breach.


3) Scheduled-Scaling-Policy:
------------------------
It is used for scheduling changes at specific dates and times.

=================================================================================================
AWS SageMaker:
--------------
Amazon SageMaker allows you to build, train, and deploy machine learning models for any use case 
with fully managed infrastructure, tools, and workflows


====================================================================================================
AWS Private 5G :
----------------
AWS Private 5G is a managed service that makes it easy to deploy, operate, and scale your own private 
cellular network, with all required hardware and software provided by AWS.


AWS Wavelength:
--------------
AWS Wavelength is incorrect. AWS Wavelength embeds AWS compute and storage services within 5G networks, 
providing mobile edge computing infrastructure for developing, deploying, and scaling ultra-low-latency applications.


===================================================================================================
AWS CloudHSM:
-------------
AWS CloudHSM is a cloud-based hardware security module (HSM) that enables you to easily generate 
and use your own encryption keys on the AWS Cloud.



AWS Outposts:
------------
AWS Outposts is a family of fully managed solutions delivering AWS infrastructure and services to virtually 
any on-premises or edge location for a truly consistent hybrid experience

AWS Outposts support running some AWS services such as ECS, IoT Greengrass, and SageMaker Edge, 
it does not support running Amazon Rekognition locally.

=================================================================================================
Security Group
--------------
Security groups are stateful. All inbound traffic is blocked by default in custom security groups. If you 
create an inbound rule allowing traffic in, that traffic is automatically allowed back out again. 
You cannot block specific IP address using Security groups (instead use Network Access Control Lists).

You cannot create deny rules with security groups.


Network Access Control Lists ( NACL )
----------------------------
NACL is stateless, it means we have to define incoming and outgoing traffic extra.



====================================================================================================
AWS Data Echange:
-----------------
AWS Data Exchange allows you to gain access to third party data sets across Automotive, 
Financial Services, Gaming, Healthcare & Life Sciences, Manufacturing, Marketing, Media & Entertainment,
Retail, and many more industries

==============================================================================================
S3
==


Note: 
there is a delay of up to 15 minutes in Cross-Region Replication. In the event of a failover, some data 
might not have been replicated yet on the secondary region.




S3-Standard
   S3-Stamdard-IA
      S3-Intelligent-Tiering
         S3-One-Zone-IA
            S3-Glacier         
               S3-Glacier-Deep-Archive 




S3 Standard-IA:
--------------
S3 Standard-IA is for data that is accessed less frequently, but requires rapid access when needed. S3 Standard-IA offers 
the high durability, high throughput, and low latency of S3 Standard, with a low per GB storage price and per GB retrieval charge


S3 One Zone-IA:
--------------
S3 One Zone-IA is for data that is accessed less frequently, but requires rapid access when needed. Unlike other 
S3 Storage Classes which store data in a minimum of three Availability Zones (AZs), S3 One Zone-IA stores data in a 
single AZ and costs 20% less than S3 Standard-IA.


Their are three type of life-cycle actions:  <- these "life-cycle" actions mean that we can change the data from one tarif to another 

1) S3_INTELLIGENT_TIERING:
--------------------------





2) S3_STANDARD_IA:
------------------




3) S3_ONEZONE_IA:
-----------------



4) S3_REDUCED_REDUNDANCY:
------------------------


5) S3_GLACIER:
--------------


6) S3_S3_Glacier_Deep_Archive:
------------------------------

S3 Object Lock:
--------------
With S3 Object Lock, you can store objects using a write-once-read-many (WORM) model. In compliance mode, a protected 
object version can't be overwritten or deleted by any user, including the root user in your AWS account

Governance-Mode:
---------------
Using governance mode would not allow the files to be changed at all for the duration of this being enabled.


S3-Replication:
---------------
With Amazon S3 you can configure same region replication (SRR) to automatically copy files from one bucket to another 
one as they are added to the source bucket. S3 event notifications can also be configured to trigger event driven 
responses when changes happen in an Amazon S3 bucket.


BlockPublicAcls - 
-----------------
This prevents any new ACLs to be created or existing ACLs being modified which enable public access to the object. 
With this alone existing ACLs will not be affected.


IgnorePublicAcls - 
-----------------
Any ACLs actions that exist with public access will be ignored, this does not prevent them being created but prevents their effects.


BlockPublicPolicy - 
------------------
This prevents a bucket policy containing public actions from being created or modified on an S3 bucket, 
the bucket itself will still allow the existing policy.


RestrictPublicBuckets - 
----------------------
This will prevent non AWS services or authorized users (such as an IAM user or role) from being able to publicly access objects in the bucket.



S3 Encryption:
-------------
-) SSE-S3 requires that Amazon S3 manage the data and the encryption keys.

-) SSE-C requires that you manage the encryption key.

-) SSE-KMS requires that AWS manage the data key but you manage the customer master key (CMK) in AWS KMS.



##############################################################################################################
RedShift and RedShift spectrum:
------------------------------
RedShift and RedShift spectrum are suitable for running massive analytics jobs on both the 
structured (RedShift data warehouse) and unstructured (Amazon S3) data.



#######################################################################################################################
KMS (Key Management System):
---------------------------


Customer Managed Keys (CMK):
----------------------------
Customer managed CMKs are CMKs in your AWS account that you create, own, and manage. You have full control 
over these CMKs, including establishing and maintaining their key policies, IAM policies, and grants, 
enabling and disabling them, rotating their cryptographic material, adding tags, creating aliases that 
refer to the CMK, and scheduling the CMKs for deletion.






================================================================================================
VPC Endpoints:
--------------
VPC endpoints and are connected to by instances in subnets via route table entries or via ENIs (depending on which service).

Their are two types of VPC Endpoints:


Interface Endpoint                                           Gateway Endpoint:
-----------------                                           -----------------
a) Elastic Network interface with a Private IP     |a)  A gateway endpoint is a target for a specific route
b) Uses DNS entries to redirect traffic            |b)  Uses prefix lists in the route table to redirect traffic
c) API Gateway, CloudFormation , CloudWatch etc..  |c)  Amazon S3, DynamoDB
d) Security Groups                                 |d)  VPC Endpoints Policies 

Gateway Endpoint:
----------------
A gateway endpoint is a gateway that you specify in your route table to access Amazon S3 from your VPC over the AWS network.

Interface Endpoint:
------------------
Interface endpoints extend the functionality of gateway endpoints by using private IP addresses to route requests 
to Amazon S3 from within your VPC, on premises, or from a VPC in another AWS Region using VPC peering or AWS Transit Gateway.

Note:
----
Using an Interface endpoint to grant access to your S3 bucket from your EC2 instance is a safe and reliable way of 
traversing the AWS Global Backbone, instead of moving data over the public internet. Adding a resource policy to only 
allow the EC2 instance IAM role will lockdown the access to this EC2 instance only.

Interface Endpoint:
https://www.youtube.com/watch?v=0bHXWIM4_0o

https://www.youtube.com/watch?v=CcenGigygs0




===============================================================================================
EFS:
---
With EFS you can transition files to EFS IA after a file has not been accessed for a specified period 
of time with options up to 90 days. 

EFS file systems are mounted using the NFSv4.1 protocol. EFS is designed to burst to allow high throughput levels for periods of time. 
EFS also offers the ability to encrypt data at rest and in transit.

Note: You can migrate data to EFS using DataSync


EFS Infrequent Access(IA) Storage:
----------------------------------
The solution uses Amazon EFS, and the files are only accessed for a few days. To reduce storage costs 
the Solutions Architect can configure the AFTER_7_DAYS lifecycle policy to transition the files to 
the IA storage class 7 days after the files are last accessed.

You define when Amazon EFS transitions files an IA storage class by setting a lifecycle policy. 
A file system has one lifecycle policy that applies to the entire file system. If a file is not 
accessed for the period of time defined by the lifecycle policy that you choose, Amazon EFS transitions 
the file to the IA storage class that is applicable to your file system.


==============================================================================================
DLM (Amazon Data Lifecycle Manager )
-------------------------------------
DLM is used for automating the process of taking and managing snapshots for EBS volumes


==============================================================================================
AWS Shield: 
----------
It is used to protect against DDoS attacks.



================================================================================================
Border Gateway Protocol (BGP):
-----------------------------
It is used for routing


===============================================================================================
AWS Direct Connect:
------------------
It  is used to connect from an on-premises data center to AWS.


===============================================================================================
AWS Direct Connect Gateway:
--------------------------
 An AWS Direct Connect Gateway is used to connect to VPCs across multiple AWS regions.


===============================================================================================
AWS Storgate Gateway:
---------------------


AWS Storage Gateway Volume gateway:
----------------------------------
A  volume gateway will create EBS snapshots


=============================================================================================
AWS Organizations API:
---------------------
You can create member accounts with the AWS Organizations API. However, you cannot use that API to 
configure the account and create VPCs and subnets

=============================================================================================
AWS Management Console:
----------------------


=============================================================================================

Amazon Inspector:
-----------------
Inspector is for identifying vulnerabilities and evaluating against security best practices.
AWS Inspector is simply a security assessments service that only helps you in checking for 
unintended network accessibility of your EC2 instances and for vulnerabilities on those EC2 instances.

=============================================================================================
Amazon Macie:
-------------
Macie is used for detecting and protecting sensitive PII data that is in Amazon S3.
AWS Macie primarily scans Amazon S3 buckets for data security and data privacy.

===================================================================================================
Amazon Macie:
------------
Amazon Macie cannot be used with RDS.



===========================================================================================
Virtual-Private-Gateway (VGW):  DJ-3.7
-----------------------
A virtual private gateway (VGW) is used with a VPN connection

Imp:
Only one VGW can attact to a VPC

A Site-to-Site VPN connection offers two VPN tunnels between a virtual private gateway or a transit 
gateway on the AWS side, and a customer gateway (which represents a VPN device) on the remote (on-premises) side. 
A virtual private gateway is the VPN concentrator on the Amazon side of the Site-to-Site VPN connection. 
You create a virtual private gateway and attach it to the VPC from which you want to create the Site-to-Site VPN connection.




VPN:
----
A virtual private gateway (VGW) is used with a VPN connection





##########################################################################################################
Open-Question:
--------------
1) EBS--  "RAID 0"  "RAID 1" ?

2) What is "Cluster Placement Group" and "Partition Placement Group" ?

3) S3-bucket       "S3 Standard-IA"  or  "S3 One Zone-IA"



##########################################################################################################
DB
--

==============================================================================================
Amazon RDS MySQL DB instance:
----------------------------
You cannot create a cross-region Multi-AZ deployment with RDS.
You cannot read from the standby in an Amazon RDS database cluster (you can with Aurora though).
Amazon RDS MySQL RDS instances can support storage autoscaling for up to 64TiB.


RDS Disaster Recovery:
----------------------
RTO is a measure of how quickly can your application recover after an outage. 
RPO is a measure of the maximum amount of data loss that your application can tolerate



Amazon RDS: (cross-Region replica)
----------------------------------
A cross-Region replica for RDS cannot provide an RPO of 1 second as there is typically more latency. 
You also cannot achieve a minute RPO as it takes much longer to promote a replica to a master.


----------------------------------------------------------------------------------------------
Multi-AZ Deploymnets                                  Read Replicas
-------------------------                            ----------------
1) Synchronous replication - highly durable     |  Asynchronous replication - highly scalable
2) Only database engine on primary instance is  |  All read replicas are accessible and can be 
    active                                      |  used for read scaling
3) Automated backups are taken from standby     | No backups configured by default
4) Always span two Availability Zones within    | Can be within an Availability Zone, Cross AZ, or Cross-Region
   a single Region                              |
5) Database engine version upgrades happen      |  Database engine version upgrade is independent from source instance
   on Primary                                   |
6) Automatic failover to standby when a problme | Can be manually promoted to a standalone database instance
   is detected    